-- Para crear un nuevo proyecto:
python -m django startproject mysite

-- Para ejecutar servidor por default en el puerto 8000:
py manage.py runserver

-- Para especificar el puerto en donde se ejecuta:
py manage.py runserver 8080

-- Para IP pública en el puerto 8000:
py manage.py runserver 0.0.0.0:8000

-- Para aplicar migraciones iniciales:
py manage.py migrate

-- Para generar migraciones de los modelos en la app polls
py manage.py makemigrations polls

-- Para mostrar el script de las tablas de la app polls:
py manage.py sqlmigrate polls 0001

-- Se aplica la migración: 
py manage.py migrate

-- Para interactuar con la API en la consola de Python:
-- Inciar la consola:
py manage.py shell

-- Comandos en la consola de Python ini:
>>> from polls.models import Choice, Question  # Import the model classes we just wrote.

# No questions are in the system yet.
>>> Question.objects.all()
<QuerySet []>

# Create a new Question.
# Support for time zones is enabled in the default settings file, so
# Django expects a datetime with tzinfo for pub_date. Use timezone.now()
# instead of datetime.datetime.now() and it will do the right thing.
>>> from django.utils import timezone
>>> q = Question(question_text="What's new?", pub_date=timezone.now())

# Save the object into the database. You have to call save() explicitly.
>>> q.save()

# Now it has an ID.
>>> q.id
1

# Access model field values via Python attributes.
>>> q.question_text
"What's new?"
>>> q.pub_date
datetime.datetime(2012, 2, 26, 13, 0, 0, 775217, tzinfo=datetime.timezone.utc)

# Change values by changing the attributes, then calling save().
>>> q.question_text = "What's up?"
>>> q.save()

# objects.all() displays all the questions in the database.
>>> Question.objects.all()
<QuerySet [<Question: Question object (1)>]>
-- Comandos en la consola de Python fin:

-- Para crear usuario Administrador:
py manage.py createsuperuser
